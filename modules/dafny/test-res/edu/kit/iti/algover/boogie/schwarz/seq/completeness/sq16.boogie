### decls:
s1: seq<int>
s2: seq<int>
s3: seq<int>
s4: seq<int>
### sequent:
   s1 == [3, 2, 1],
   s2 == [1, 2, 3],
   s3 == s1 + s2,
   s4 == s2 + s2,
   s3[0] == s4[0] || s3[0] != s4[0]
|- 
   s3 != s4
### result:
irrelevant
### OLD-translation:
var _s1 : Seq int;
var _s2 : Seq int;
var _s3 : Seq int;

procedure Sequent()
  ensures false;
{
  assume Seq#Equal(_s1, Seq#Build(Seq#Build(Seq#Build(Seq#Empty(), 3), 2), 1));
  assume Seq#Equal(_s2, Seq#Build(Seq#Build(Seq#Build(Seq#Empty(), 1), 2), 3));
  assume Seq#Equal(_s3, Seq#Append(_s1, _s2));
  assume !(!(Seq#Equal(_s3, Seq#Append(_s2, _s2))));
}
### comments:

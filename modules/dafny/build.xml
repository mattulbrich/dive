<?xml version="1.0" encoding="UTF-8"?>
<project name="AlgoVer-dafny" default="build" basedir=".">


	<property name="dir.lib" location="../../lib" />
	<property name="dir.testres" location="test-res" />
	<property name="dir.tools" value="../../tools" />
	<property name="dir.core.bin" value="../core/bin" />
	<property name="dir.core.testbin" value="../core/test-bin" />

	<property name="boogie.binary" value="boogie"/>

	<property name="libs"
			  value="${dir.lib}/antlr.jar:${dir.lib}/junit4.jar:${dir.lib}/hamcrest.jar:${dir.lib}/junitparams.jar:${dir.lib}/jpplib.jar:${dir.lib}/antlr-4.7-complete.jar:${dir.lib}/guava-23.0.jar"/>

	<target name="init" description="initialize all directories">
		<mkdir dir="bin" />
		<mkdir dir="test-bin" />
	</target>

	<target name="copy-test" depends="init">
		<copy todir="test-bin">
			<fileset dir="test-res">
			</fileset>
		</copy>
	</target>

	<target name="build" description="Compile and collect all needed resources" depends="compile,copy" />

	<target name="copy">
		<copy todir="bin">
			<fileset dir="res" />
		</copy>
	</target>

	<target name="compile" description="Compile all files" depends="init">
		<echo>"${libs}"</echo>
		<javac destdir="bin" classpath="${dir.core.bin}:${libs}" debug="on">
			<src path="src" />
		</javac>
	</target>

	<target name="compile-test" depends="compile, init, copy-test">
		<javac srcdir="test" destdir="test-bin" classpath="bin:${dir.core.bin}:${dir.core.testbin}:bin:${libs}" debug="on" />
	</target>

	<target name="test" depends="compile-test, build">
		 <exec executable="${boogie.binary}">
                        <arg value="/version"/>
                </exec>

		<junit fork="yes" printsummary="yes">
			<jvmarg value="-javaagent:${dir.lib}/nonnull.jar=edu.kit." />
			<jvmarg value="-Dedu.kit.iti.algover.boogie_binary=${boogie.binary}"/>
			<formatter type="xml" />
			<assertions><enable/></assertions>
			<classpath path="test-bin:bin:${libs}:${dir.lib}/hamcrest.jar:${dir.core.bin}:${dir.core.testbin}" />
			<test name="edu.kit.iti.algover.boogie.Tests" />
		</junit>
	</target>

	<target name="clean">
		<delete dir="bin" />
		<delete dir="test-bin" />
		<delete dir="gen" />
	</target>

	<target name="checkstyle">
		<taskdef resource="checkstyletask.properties" classpath="${dir.tools}/checkstyle-5.7-all.jar" />
		<checkstyle config="${dir.tools}/checkstyle.xml" failOnViolation="false">
			<property key="basedir" file="../.." />
			<fileset dir="src" includes="**/*.java" />
			<formatter type="plain" />
			<formatter type="xml" toFile="checkstyle-results.xml" />
		</checkstyle>
	</target>

</project>

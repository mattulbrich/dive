
dive.enableAssertions = true
dive.antialias = gasp

dive.sequentview.background = UI:info

dive.termcomponent.font = Monospaced, PLAIN, 14
dive.termcomponent.bordercolor = gray60
dive.termcomponent.highlightcolor = #FFB366
dive.termcomponent.programbackground = #d0d0ff
dive.termcomponent.updatebackground = #f0f0ff
dive.termcomponent.variableforeground = magenta
dive.termcomponent.keywordforeground = maroon
dive.termcomponent.typeforeground = light grey
dive.termcomponent.findforeground = #9999FF
dive.termcomponent.assumptionforeground = #99CCFF
dive.termcomponent.userentityforeground = forest green

pseudo.baseDir = .
pseudo.sysDir = ${pseudo.baseDir}/sys
pseudo.settingsFile = ${pseudo.baseDir}/ivil.properties

pseudo.auto.defaultStrategy = de.uka.iti.pseudo.auto.strategy.CompoundStrategy

#
# GUI settings. put in a file in gui possibly.
#

pseudo.editor.font = Monospaced, PLAIN, 14

pseudo.program.font = Monospaced, PLAIN, 14
pseudo.program.highlightcolor = dark sea green
pseudo.program.boogiecolor = blue
pseudo.program.sourcecolor = brown
pseudo.program.sourcehighlight = #b0b0ff
pseudo.program.tracecolor = #c8e6c8

pseudo.program.boogiehighlight = gray88

pseudo.sequentview.background = UI:info
pseudo.sequentview.scroll.unitIncrement = 10
pseudo.sequentview.scroll.blockIncrement = 50


pseudo.prooftree.defaultverbosity = 5
pseudo.prooftree.shownumbers = false

pseudo.auto.popup.refreshDelay = 100

#
# SMT background solving enabled or not
pseudo.smt.background = true

# keep the SMT window open after completion
pseudo.smt.keepwindowopen = false

# false throws away Z3 input data, true stores it in tmp-files.
pseudo.z3.keepFile = false

# use the translation to SMTLib Version 1 for Z3
# (default is SMT Lib 2)
pseudo.z3.useSMT1 = false

# A persistent cache for results of calls to the z3 smt solver
# can be maintained. If this property is set, it specifies
# the file under which results are stored.</p>
# The persistent cache stores SHA256 hashes of the SMT files.
pseudo.z3.persistentCache =  ${pseudo.baseDir}/z3smt.cache

#
# the default entry for open URL dialog
pseudo.defaultURL = http://

#
# default number of backup files used for one file. They
# are rotated when overwritten
pseudo.countbackup = 10

#
# in loop treatment, split the invariant assertion into
# several statements
pseudo.loopAssertionSplit = true

# when loading an ivil file ... create total or partial
# correctness proof obligations?
# Can be overwritten by adding
#   properties ProofObligation.termination "true"
# to your input file.
# true = total, false = partial
pseudo.programTermination = true

# when loading boogie files ... create total or partial
# correctness proof obligations?
# true = total, false = partial
pseudo.boogie.programTermination = ${pseudo.programTermination}
<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks KeY's coding conventions from:

     https://www.key-project.org/gitlab/key/KeY/wikis/Code-Conventions

  Comments which are initialed "KeY" are removed for the incremental
  checks run for KeY. The comments have been added to allow for this
  check file to be used out of the box with existing checkstyle
  frameworks within Eclipse etc.
-->

<module name="Checker">
    <property name="localeLanguage" value="en"/>
    <!-- <property name="fileExtensions" value="java"/> only in newer checkstyle versions -->

    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="Checkstyle\: *OFF +([\w\|]+)"/>
      <property name="onCommentFormat" value="Checkstyle\: *ON +([\w\|]+)"/>
      <property name="checkFormat" value="$1"/>
    </module>

    <module name="SuppressWithNearbyCommentFilter">
      <property name="commentFormat" value="Checkstyle\: *IGNORE +([\w\|]+)"/>
      <property name="checkFormat" value="$1"/>
      <property name="influenceFormat" value="3"/>
    </module>

    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="Checkstyle\: *ALLOFF"/>
      <property name="onCommentFormat" value="Checkstyle\: *ALLON"/>
      <property name="checkFormat" value=".*"/>
    </module>

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!--    <module name="JavadocPackage"/>-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
      <property name="severity" value="info"/>
    </module>
    
    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
      <property name="severity" value="info"/>
    </module>
    
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
       <property name="eachLine" value="true"/>
    </module>

    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <module name="Header">
      <!-- The follow property value demonstrates the ability     -->
      <!-- to have access to ANT properties. In this case it uses -->
      <!-- the ${basedir} property to allow Checkstyle to be run  -->
      <!-- from any directory within a project. See property      -->
      <!-- expansion,                                             -->
      <!-- http://checkstyle.sf.net/config.html#properties        -->
      <property
         name="headerFile" value="${basedir}/HEADER"/>
      <property name="severity" value="info"/>
    </module>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">
      <property name="format" value="\s+$"/>
      <property name="minimum" value="0"/>
      <property name="maximum" value="0"/>
      <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">

      <module name="FileContentsHolder"/>

      <!-- Checks for Javadoc comments.                     -->
      <!-- See http://checkstyle.sf.net/config_javadoc.html -->
      <module name="JavadocMethod">
	<!-- getter and setter need not necessarily be documented ... -->
        <property name="allowMissingPropertyJavadoc" value="true" />
        <property name="allowUndeclaredRTE" value="true" />
        <property name="suppressLoadErrors" value="true" />
        <property name="scope" value="package" />
      </module>
      <module name="JavadocType">
	<property name="scope" value="package"/>
	<property name="authorFormat" value="\S"/>
	<property name="allowUnknownTags" value="true" />
      </module>

      <module name="JavadocVariable"/>
      <module name="JavadocStyle">
        <property name="checkFirstSentence" value="false" />
      </module>

      <!-- Checks for Naming Conventions.                  -->
      <!-- See http://checkstyle.sf.net/config_naming.html -->
      <module name="ConstantName"/>
      <module name="LocalFinalVariableName"/>
      <module name="LocalVariableName"/>
      <module name="MemberName"/>
      <module name="MethodName"/>
      <module name="PackageName"/>
      <module name="ParameterName"/>
      <module name="StaticVariableName"/>
      <module name="TypeName"/>

      <module name="UnusedImports">
        <property name="severity" value="warning"/>
      </module>


      <!-- Checks for Size Violations.                    -->
      <!-- See http://checkstyle.sf.net/config_sizes.html -->
      <module name="LineLength">
        <property name="max" value="100"/>
      </module>
      <module name="MethodLength">
        <property name="max" value="60"/>
        <property name="countEmpty" value="false"/>
      </module>

      <!-- Checks for whitespace                               -->
      <!-- See http://checkstyle.sf.net/config_whitespace.html -->
      <module name="ParenPad">
	<property name="severity" value="info" />
      </module>
      <module name="TypecastParenPad">
        <property name="severity" value="info"/>
      </module>
      <module name="WhitespaceAfter">
	<property name="severity" value="info" />
	<property name="tokens" 
		  value="COMMA, SEMI" />
      </module>
      <module name="WhitespaceAround">
	<property name="severity" value="warning" />
	<property name="tokens" 
		  value="ASSIGN, ARRAY_INIT, BAND, BAND_ASSIGN, BOR, 
			 BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN,
			 COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, 
			 LAND, LCURLY, LE, LOR, LT, MINUS, MINUS_ASSIGN,
			 MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN,
			 QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
			 SR_ASSIGN, STAR, STAR_ASSIGN"/><!-- LAMBDA in newer versions -->
      </module>

      <!-- Checks for blocks. You know, those {}'s         -->
      <!-- See http://checkstyle.sf.net/config_blocks.html -->
      <module name="LeftCurly">
	<property name="option" value="eol"/>
      </module>
      <module name="NeedBraces"/>
      <module name="RightCurly"/>

      <!-- Checks for common coding problems               -->
      <!-- See http://checkstyle.sf.net/config_coding.html -->
      <module name="DeclarationOrder" />

      <module name="DefaultComesLast">
        <property name="severity" value="info"/>
      </module>     

      <module name="EmptyStatement">
	<message key="empty.statement"
		 value="Empty Statement. (Replace it with an empty block containing a comment.)"/>
        <property name="severity" value="warning"/>
      </module>

      <module name="EqualsHashCode">
	<property name="severity" value="warning" />
      </module>

      <module name="FallThrough">
	<property name="severity" value="warning" />
	<message key="fall.through"
		 value="Fall through from previous branch of the switch statement. (Add a clarifying comment mentioning 'falls through'.)"/>
	<message key="fall.through.last"
		 value="Fall through from the last branch of the switch statement. (Add a clarifying comment mentioning 'falls through'.)"/>
      </module>

      <module name="InnerAssignment">
        <property name="severity" value="warning"/>
      </module>

      <module name="MultipleVariableDeclarations"/>

      <module name="SimplifyBooleanExpression">
        <property name="severity" value="warning"/>
      </module>

      <module name="SimplifyBooleanReturn">
        <property name="severity" value="warning"/>
      </module>

      <!-- Checks for class design                         -->
      <!-- See http://checkstyle.sf.net/config_design.html -->
      <module name="FinalClass">
	<property name="severity" value="warning" />
      </module>

      <module name="HideUtilityClassConstructor">
        <property name="severity" value="warning"/>
      </module>

      <module name="TodoComment">
        <property name="format" value="REVIEW"/>
        <property name="severity" value="warning"/>
      </module>

      <module name="VisibilityModifier">
	<!-- <property name="allowPublicFinalFields" value="true" /> -->
	<property name="severity" value="warning" />
      </module>

      <!-- Miscellaneous other checks.  -->
      <!-- See http://checkstyle.sf.net/config_misc.html -->
      <module name="Indentation">
        <property name="basicOffset" value="4"/>
        <property name="caseIndent" value="0"/>
        <property name="severity" value="error"/>
        <!-- after 2013-12-08 <property name="throwsIndent" value="8"/> -->
      </module>

    </module>

</module>
